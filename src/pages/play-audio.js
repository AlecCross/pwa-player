import { useEffect, useState } from 'react';

export default function PlayAudioPage() {
  const [audioUrl, setAudioUrl] = useState(null);
  const [isApiSupported, setIsApiSupported] = useState(false);

  useEffect(() => {
    if ('launchQueue' in window && 'files' in window.launchQueue) {
      console.log("‚úÖ File Handling API –ø—ñ–¥—Ç—Ä–∏–º—É—î—Ç—å—Å—è");
      setIsApiSupported(true);

      window.launchQueue.setConsumer(async (launchParams) => {
        if (!launchParams.files.length) return;

        const fileHandle = launchParams.files[0];
        try {
          const file = await fileHandle.getFile();
          console.log("üìÇ –í—ñ–¥–∫—Ä–∏—Ç–∏–π —Ñ–∞–π–ª:", file.name, file.type);
          const url = URL.createObjectURL(file);
          setAudioUrl(url);
        } catch (error) {
          console.error("‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –æ—Ç—Ä–∏–º–∞–Ω–Ω—ñ —Ñ–∞–π–ª—É:", error);
        }
      });
    } else {
      console.log("‚ùå File Handling API –Ω–µ –ø—ñ–¥—Ç—Ä–∏–º—É—î—Ç—å—Å—è");
      setIsApiSupported(false);
    }

    return () => {
      if (audioUrl) {
        URL.revokeObjectURL(audioUrl);
      }
    };
  }, [audioUrl]); // –î–æ–¥–∞—î–º–æ `audioUrl` —É –∑–∞–ª–µ–∂–Ω–æ—Å—Ç—ñ

  return (
    <div>
      <h1>–í—ñ–¥—Ç–≤–æ—Ä–µ–Ω–Ω—è –∞—É–¥—ñ–æ</h1>
      {audioUrl ? (
        <audio controls src={audioUrl}>
          –í–∞—à –±—Ä–∞—É–∑–µ—Ä –Ω–µ –ø—ñ–¥—Ç—Ä–∏–º—É—î –∞—É–¥—ñ–æ–µ–ª–µ–º–µ–Ω—Ç.
        </audio>
      ) : (
        <p>–û—á—ñ–∫—É–≤–∞–Ω–Ω—è –Ω–∞ –≤—ñ–¥–∫—Ä–∏—Ç—Ç—è –∞—É–¥—ñ–æ—Ñ–∞–π–ª—É...</p>
      )}
      <p>{`–ü—ñ–¥—Ç—Ä–∏–º–∫–∞ File Handling API: ${isApiSupported}`}</p>
    </div>
  );
}
